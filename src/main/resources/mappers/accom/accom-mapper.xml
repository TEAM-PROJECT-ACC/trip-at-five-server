<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="accommodationMapper">
	<!-- 사용자 페이지 숙박 목록 조회(키워드/검색 데이터) -->
    <select id="selectAccomList" parameterType="com.kh.clock.accommodation.repository.dto.AccomListInfoDTO" resultType="com.kh.clock.accommodation.repository.dto.AccomDTO">
      SELECT 
      	ACCOM_SQ,
        ACCOM_NAME,
        ACCOM_DESC,
        ACCOM_LON,
        ACCOM_LAT,
        ACCOM_ZIP_CODE,
        ACCOM_ADDR,
        ACCOM_PHONE,
        ACCOM_REG_DT,
        PUB_FAC_INFO,
        IN_ROOM_FAC_INFO,
        ETC_FAC_INFO,
        ACCOM_TYPE_NO,
        LOC_ID,
        R.ROOM_PRICE,
        R.ROOM_CHK_IN,
        R.ROOM_CHK_OUT
		FROM ACCOMMODATION_TB A
		JOIN (
	    	SELECT R1.ACCOM_NO, R1.ROOM_PRICE, R1.ROOM_CHK_IN, R1.ROOM_CHK_OUT
	    	FROM (
	      		SELECT R.*,
	            	ROW_NUMBER() OVER (PARTITION BY R.ACCOM_NO ORDER BY R.ROOM_PRICE ASC) AS RN
	      		FROM ROOM_TB R
	    		) R1
	    	WHERE R1.RN = 1
	  	) R ON A.ACCOM_SQ = R.ACCOM_NO
	  	JOIN LOCATION_TB USING (LOC_ID)
	    WHERE 1=1
		  <if test="keyword != null and keyword != ''">
		    AND (
		      LOC_NAME LIKE '%' || #{keyword} || '%'
		      OR A.ACCOM_NAME LIKE '%' || #{keyword} || '%'
		    )
		  </if>
		  <if test="minPrice != null and maxPrice != null">
		     AND R.ROOM_PRICE BETWEEN #{minPrice} AND #{maxPrice}
		  </if>
	    ORDER BY ACCOM_NAME
    </select>
	
	<!-- 사용자 페이지 숙박 상세 페이지 -->
    <select id="selectAccomDetail" parameterType="int" resultType="com.kh.clock.accommodation.repository.dto.AccomDTO">
        SELECT 
        A.ACCOM_SQ,
        A.ACCOM_SQ AS accomNo,
        A.ACCOM_NAME,
        A.ACCOM_DESC,
        A.ACCOM_LON,
        A.ACCOM_LAT,
        A.ACCOM_ZIP_CODE,
        A.ACCOM_ADDR,
        A.ACCOM_PHONE,
        A.ACCOM_REG_DT,
        A.PUB_FAC_INFO,
        A.IN_ROOM_FAC_INFO,
        A.ETC_FAC_INFO,
        A.ACCOM_TYPE_NO,
        A.LOC_ID,
        R.ROOM_PRICE
        FROM ACCOMMODATION_TB A
        JOIN (SELECT ACCOM_NO, MIN(ROOM_PRICE) ROOM_PRICE FROM ROOM_TB GROUP BY ACCOM_NO ) R ON A.ACCOM_SQ = R.ACCOM_NO
        WHERE A.ACCOM_SQ = #{accomSq}
        ORDER BY A.ACCOM_SQ DESC
    </select>

	<!-- 사용자 페이지 숙박 상세 페이지 안의 객실 정보 조회 -->
	<select id="selectRoomList" parameterType="int" resultType="com.kh.clock.room.domain.RoomVO">
		SELECT
			ROOM_SQ,
		    ROOM_NAME,
		    ROOM_PRICE,
		    ROOM_CHK_IN,
		    ROOM_CHK_OUT,
		    ROOM_STD_PPL,
		    ROOM_MAX_PPL,
		    ROOM_CNT,
		    ROOM_REG_DT,
		    ACCOM_NO
		FROM ROOM_TB
		WHERE ACCOM_NO = #{accomNo}
		ORDER BY ACCOM_NO DESC
	</select>
	
	<!-- 관리 -->
	<select id="selectAdminAccomList" parameterType="com.kh.clock.accommodation.repository.dto.AccomAdminSearchDTO" resultType="com.kh.clock.accommodation.repository.dto.AccomAdminListDTO">
		SELECT 
			A.ACCOM_SQ AS NO,
			T.ACCOM_TYPE_NAME,
			A.ACCOM_NAME,
			A.ACCOM_ADDR,
			A.ACCOM_PHONE,
			R.ROOM_PRICE
		FROM ACCOMMODATION_TB A
		LEFT JOIN LOCATION_TB L ON A.LOC_ID = L.LOC_ID
		LEFT JOIN (SELECT R.ACCOM_NO, MIN(R.ROOM_PRICE) AS ROOM_PRICE FROM ROOM_TB R GROUP BY R.ACCOM_NO) R ON A.ACCOM_SQ = R.ACCOM_NO
		LEFT JOIN ACCOMMODATION_TYPE_TB T ON A.ACCOM_TYPE_NO = T.ACCOM_TYPE_SQ
		<where>
			<if test="keyword != null and keyword != ''">
				AND (
					A.ACCOM_NAME LIKE '%' || #{keyword} || '%'
					OR A.ACCOM_ADDR LIKE  #{keyword} || '%'
				)
			</if>
	</where>
		ORDER BY A.ACCOM_SQ DESC
	</select>
    
	<select id="selectAdminAccomDetail" parameterType="int" resultType="com.kh.clock.accommodation.repository.dto.AccomAdminDetailDTO">
		SELECT
			ACCOM_SQ,
			ACCOM_NAME,
			ACCOM_DESC,
			ACCOM_LON,
			ACCOM_LAT,
			ACCOM_ZIP_CODE,
			ACCOM_ADDR,
			ACCOM_PHONE,
			ACCOM_REG_DT,
			PUB_FAC_INFO,
			IN_ROOM_FAC_INFO,
			ETC_FAC_INFO,
			ACCOM_TYPE_NO
		FROM ACCOMMODATION_TB
		WHERE ACCOM_SQ = #{accomSq}
		ORDER BY ACCOM_SQ DESC
	</select>
	
	<update id="updateAdminAccomDetail">
		UPDATE ACCOMMODATION_TB
    	SET
	        accom_name = #{accomName},
	        accom_desc = #{accomDesc},
	        accom_lat = #{accomLat},
	        accom_lon = #{accomLon},
	        accom_addr = #{accomAddr},
	        accom_phone = #{accomPhone},
	        pub_fac_info = #{pubFacInfo},
	        in_room_fac_info = #{inRoomFacInfo},
	        etc_fac_info = #{etcFacInfo},
	        accom_type_no = #{accomTypeNo}
    	WHERE accom_sq = #{accomSq}
	</update>
	
	<delete id="deleteAdminRoom" parameterType="int" >
		DELETE FROM ROOM_TB WHERE ACCOM_NO = #{accomSq}
	</delete>
	
	<delete id="deleteAdminAccom" parameterType="int" >
		DELETE FROM ACCOMMODATION_TB WHERE ACCOM_SQ = #{accomSq}
	</delete>
	
	<insert id="insertAdminAccom" parameterType="com.kh.clock.accommodation.repository.dto.AccomAdminDetailDTO">
	    INSERT INTO ACCOMMODATION_TB (
	      ACCOM_SQ,
	      ACCOM_NAME,
	      ACCOM_DESC,
	      ACCOM_LON,
	      ACCOM_LAT,
	      ACCOM_ZIP_CODE,
	      ACCOM_ADDR,
	      ACCOM_PHONE,
	      ACCOM_REG_DT,
	      PUB_FAC_INFO,
	      IN_ROOM_FAC_INFO,
	      ETC_FAC_INFO,
	      ACCOM_TYPE_NO
	    ) VALUES (
	      ACCOM_SEQ.NEXTVAL,
	      #{accomName},
	      #{accomDesc},
	      #{accomLon},
	      #{accomLat},
	      #{accomZipCode},
	      #{accomAddr},
	      #{accomPhone},
	      SYSDATE,
	      #{pubFacInfo},
	      #{inRoomFacInfo},
	      #{etcFacInfo},
	      #{accomTypeNo}
	    )
	    
	    
		<!--
			방금 INSERT 한 데이터의 키값 조회
			order를 AFTER로 설정하여 SQL쿼리문 실행 후 실행으로 설정
		-->
	 	<selectKey keyProperty="accomSq" order="AFTER" resultType="int">
	        SELECT ACCOM_SEQ.CURRVAL FROM DUAL
	    </selectKey>
	</insert>
</mapper>
